name: Publish to GitHub Packages Registry

# Version: 2.1.2
# Modified: No
# Requirements:
# - The `name` in `package.json` should start with `@athombv/`.
#
# Secrets:
# - HOMEY_GITHUB_ACTIONS_BOT_PERSONAL_ACCESS_TOKEN
#
# Ensure you've run `npm version major|minor|patch` on the `master` branch before merging to `production`.
#
# This GitHub Workflow:
# 1. [Optional] If `npm run build` exists. If so, it runs `npm ci` and `npm run build`.
# 2. Publishes the package to the GitHub Packages Registry.

on:
  push:
    branches:
      - testing
      - production

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:

      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Set up node 16 environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'

      # Sets package.json name & version to environment.
      - name: Get Package Info
        run: |
          NAME="$(node -p "require('./package.json').name")"
          echo package_name=${NAME} >> $GITHUB_ENV

          VERSION="$(node -p "require('./package.json').version")"
          echo package_version=${VERSION} >> $GITHUB_ENV

      # Ensure `package.json .files` exists.
      - name: Verify
        run: |
          if ! cat package.json | jq -e .files; then
            echo "Missing 'files' array in package.json."
            exit 1
          fi
          
      # Run `npm ci && npm run build` if it exists.
      - name: Build
        run: |
          if jq --exit-status '.scripts | has("build")' package.json; then
            echo "'npm run build' does exist. Building..."
            npm ci
            npm run build
          else
            echo "'npm run build' does not exist. Skipping build..."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HOMEY_GITHUB_ACTIONS_BOT_PERSONAL_ACCESS_TOKEN }}

      # Publish when this action is running on branch production.
      - name: Publish
        if: github.ref == 'refs/heads/production'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm publish

      # Publish to beta when this action is running on branch testing.
      - name: Publish (beta)
        if: github.ref == 'refs/heads/testing'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm publish --tag beta

       # Post a Slack notification on success/failure
      - name: Slack notify
        if: always()
        uses: innocarpe/actions-slack@v1
        with:
          status: ${{ job.status }}
          success_text: '${{github.repository}} - Published ${{ env.package_name }}@${{ env.package_version }} to GitHub Packages Registry ðŸš€'
          failure_text: '${{github.repository}} - Failed to publish ${{ env.package_name }}@${{ env.package_version }} to GitHub Packages Registry'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
